<?xml version="1.0" encoding="UTF-8"?>
    <table securityLevel="any" xmlns="http://query.yahooapis.com/v1/schema/table.xsd">
  <meta>
    <author>Pedro Moreira</author>
    <sampleQuery>SELECT * FROM {table};</sampleQuery>
    <documentationURL></documentationURL>
  </meta>
  <bindings>
    <select itemPath="" produces="XML">
      <urls>
       <url>http://torrentbutler.eu/hd/latest/page/{page}</url>
      </urls>
      <inputs>
       <key id='from'   type='xs:string' paramType='variable' required="false" default="1" />
       <key id='to'     type='xs:string' paramType='variable' required="false" default="1"/>
       <key id='rating' type='xs:string' paramType='variable' required="false" default="60"/>
      </inputs>
      <execute><![CDATA[
          var baseurl = "http://torrentbutler.eu";
          var results = <movies />;
          var myRegexp = /\/[0-9]+\-(.+)/;

          for (var i=from; i <= to; i++) {

              var url     = baseurl + "/hd/latest/page/" + i;

              var xpath   = "//a[contains(@class,'movie')]";
              var yql     = "select href from html 
                             where url=@url 
                             and   compat="html5" 
                             and   xpath=@xpath
                             and   data-rating > @rating 
                             |     unique(field="href", hideRepeatCount="true")";
              var query   = y.query(yql, {url: url, xpath: xpath, rating: rating});
              
              for each (movie in query.results.a) {
                  var t_url = baseurl + movie.@href;
                  var t_xpath = '//div[contains(@class,"high_definition")]/table/tbody/tr';
                  var t_query_txt = "SELECT * FROM html WHERE url=@url AND xpath=@xpath";
                  t_query_txt     += " AND td.p Matches '(1.[5-9][0-9])|([2-5].[0-9]+).GB$' AND td.p Matches '^[1-9][0-9]+$'";  
                  t_query_txt     += " limit 1 | sort (field=\"td.p\",descending=\"true\")"

                  var t_query = y.query(t_query_txt, {url: t_url, xpath: t_xpath});
                  
                  // set main movie item
                  var moviexml = <movie></movie>;
                  moviexml.@href=t_url;

                  // get movie title
                  var movieTitle = myRegexp.exec(movie.@href)[1];
                  movieTitle.trim();
                  movieTitle.replace(/[^a-z0-9]/gi, '_').toLowerCase();
                  
                  // set movie title
                  moviexml.@title=movieTitle;

                  if (t_query.results != undefined && t_query.results != '') {
                      for each (t in t_query.results.tr) {
                          var torrent = <torrent></torrent>;
                          torrent.appendChild(<seeds>{t.td[0].p.text()}</seeds>);
                          torrent.appendChild(<size>{t.td[1].p.text()}</size>);
                          torrent.appendChild(<link>{t.td[2].div.a.@href}</link>);
                          moviexml.appendChild(torrent);
                      }
                      results.appendChild(moviexml);
                  }
              }
          }
          response.object = results;
      ]]></execute>
    </select>
  </bindings>
</table>
